/*! 
 * Mikeotizels Clipboard JS v2.0.0
 * https://github.com/mikeotizels/clipboardjs
 * Copyright 2024-2025 Michael Otieno
 * Licensed under MIT 
 */(()=>{"use strict";window.moClipboard=class{constructor(t,e={}){this.selector=t||"[data-clipboard]";this.options=e;this.success="function"==typeof this.options.success?this.options.success:(t,e)=>console.info("[moClipboard] Clipboard operation executed.",{action:action,text:text,trigger:e});this.error="function"==typeof this.options.error?this.options.error:(t,e)=>console.error("[moClipboard] Clipboard operation failed.",t,{trigger:e});this._init()}_init(){const t=document.querySelectorAll(this.selector);t.length&&t.forEach(r=>{r.addEventListener("click",async t=>{t.preventDefault();let e=r.getAttribute("data-clipboard-action");if(!e||"copy"!==e&&"cut"!==e){console.warn('[moClipboard] Missing or invalid "action" attribute, defaulting to "copy".');e="copy"}let o,i;if(r.hasAttribute("data-clipboard-text"))o=r.getAttribute("data-clipboard-text");else if(r.hasAttribute("data-clipboard-target")){t=r.getAttribute("data-clipboard-target");if(!(i=document.getElementById(t)))return void console.error(`[moClipboard] Unable to find the "target" element with ID "${t}"`);if("copy"===e&&i.hasAttribute("disabled"))return console.error('[moClipboard] Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute.'),void 0;if("cut"===e&&(i.hasAttribute("readonly")||i.hasAttribute("disabled")))return console.error('[moClipboard] Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes.'),void 0;o=this._getText(i)}else o=this._getText(r);try{if("copy"===e)await this._copy(o);else if("cut"===e){await this._copy(o);this._removeText(i)}this.success({action:e,text:o,trigger:r})}catch(t){this.error(t,r)}})})}_getText(t){return"INPUT"===t.tagName||"TEXTAREA"===t.tagName?t.value:t.innerText}_removeText(t){"INPUT"===t.tagName||"TEXTAREA"===t.tagName?t.value="":t.isContentEditable?t.innerHTML="":t.innerText=""}_copy(t){return navigator.clipboard&&navigator.clipboard.writeText?navigator.clipboard.writeText(t):this._fallbackCopy(t)}_fallbackCopy(t){const e=document.createElement("textarea");e.style.position="fixed";e.style.top="0";e.style.left="0";e.style.opacity="0";e.value=t;e.setAttribute("readonly","readonly");document.body.appendChild(e);e.focus();e.select();try{document.execCommand("copy")}catch(t){throw t}finally{document.body.removeChild(e)}}}})();
